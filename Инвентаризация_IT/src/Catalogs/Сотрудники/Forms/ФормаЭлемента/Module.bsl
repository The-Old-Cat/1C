
//@skip-check module-structure-method-in-regions
&НаКлиенте
Функция СформироватьТекстНеобходимыхДействий(УчетныеЗаписи)
// Формируем текст для вывода
  ТекстДляВывода = "1. Заблокировать учетные записи: " + Символы.ПС;

  // Счетчик заблокированных учетных записей
  КоличествоЗаблокированных = 0;

  // Сначала проверяем, есть ли строки в табличной части
  Если УчетныеЗаписи.Количество() = 0 Тогда
    ТекстДляВывода = "Информация об учетных записях отсутствует";
  // Если строки есть, проверяем, все ли учетные записи заблокированы
  ИначеЕсли КоличествоЗаблокированных = УчетныеЗаписи.Количество() Тогда
    ТекстДляВывода = "Все учетные записи заблокированы";
  Иначе
    // Перебираем строки табличной части
    Для Каждого СтрокаТабличнойЧасти Из УчетныеЗаписи Цикл
      // Проверяем, заблокирована ли учетная запись
      Если СтрокаТабличнойЧасти.Заблокирована = Ложь Тогда
        ТекстДляВывода = ТекстДляВывода + "- " + СтрокаТабличнойЧасти.УчетнаяЗапись + " " + СтрокаТабличнойЧасти.Логин + " " + Символы.ПС;
      Иначе
        КоличествоЗаблокированных = КоличествоЗаблокированных + 1;
      КонецЕсли;
    КонецЦикла;

    // Проверяем еще раз, все ли учетные записи заблокированы, 
    // после того как прошли по циклу
    Если КоличествоЗаблокированных = УчетныеЗаписи.Количество() Тогда
      ТекстДляВывода = "Все учетные записи заблокированы";
    КонецЕсли;
  КонецЕсли;

  Возврат ТекстДляВывода;
КонецФункции



//@skip-check module-structure-method-in-regions
&НаКлиенте
Процедура НеобходимыеДействияНажатие(Элемент)
	// Проверяем, что кликнули по нашей гиперссылке
  Если Элемент = Элементы.НеобходимыеДействия Тогда
    // Вызываем процедуру для формирования текста
    ТекстДляВывода = СформироватьТекстНеобходимыхДействий(Объект.УчетныеЗаписи);

    Элементы.СписокНеобходимыхДействий.Заголовок = ТекстДляВывода;
  КонецЕсли;
КонецПроцедуры


//@skip-check module-structure-method-in-regions
&НаКлиенте
Процедура УчетныеЗаписиПриИзменении(Элемент)
	// Вызываем процедуру для формирования текста
  ТекстДляВывода = СформироватьТекстНеобходимыхДействий(Объект.УчетныеЗаписи);

  Элементы.СписокНеобходимыхДействий.Заголовок = ТекстДляВывода;
КонецПроцедуры



//@skip-check module-structure-method-in-regions
&НаКлиенте
Процедура УстановитьВидимость()
	Уволен = Объект.Уволен;
	Элементы.НеобходимыеДействия.Видимость = Уволен;
	Элементы.СписокНеобходимыхДействий.Видимость = Уволен;
КонецПроцедуры

//@skip-check module-structure-method-in-regions
&НаКлиенте
Процедура УволенПриИзменении(Элемент)
	УстановитьВидимость()
КонецПроцедуры

//@skip-check module-structure-method-in-regions
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость()
КонецПроцедуры
